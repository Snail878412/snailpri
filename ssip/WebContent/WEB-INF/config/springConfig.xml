<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
      	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
        http://www.springframework.org/schema/context 
        http://www.springframework.org/schema/context/spring-context-3.0.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop-3.0.xsd">
	<context:annotation-config />

	<bean id="ssipSqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="ssipDataSource" />
		<property name="configLocation" value="/WEB-INF/config/mybatis.xml" />
		<property name="mapperLocations"
			value="classpath*:com/snail/ssip/dao/**/*-Mapper.xml" />
	</bean>
	
	<!-- 开启事务注解驱动 -->
	<tx:annotation-driven />

	<!-- 事务管理器 -->
	<bean name="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="ssipDataSource"></property>
	</bean>
	<!-- PROPAGATION_SUPPORTS: 如果已经存在事务,则加入事务;如果没有事务,则以非事务的方式执行; 
		 PROPAGATION_MANDATOR: 使用当前事务, 如果没有, 则抛出异常; 
		 PROPAGATION_REQUIRED: 支持当前事务，如果当前没有事务，就新建一个事务 
		 PROPAGATION_REQUIRED_NEW: 新建事务,如果当前有事务, 则挂起; 
		 ROPAGATION_NOT_SUPPORTED:以非事务的方式执行, 如果当前有事务, 则挂起; 
		 PROPAGATION_NEVER:以非事务的方式执行, 如果当前有事务,则抛出异常; 
		 +/-Exception:
		 + 表示异常出现时事物提交 - 表示异常出现时事务回滚 -->
	<tx:advice id="userTxAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="del*" propagation="REQUIRED" read-only="false"
				rollback-for="com.snail.common.SPRollbackException" no-rollback-for="com.snail.common.SPNoRollbackException" />	
			<tx:method name="remove*" propagation="REQUIRED" read-only="false"
				rollback-for="com.snail.common.SPRollbackException" no-rollback-for="com.snail.common.SPNoRollbackException" />
			<tx:method name="insert*" propagation="REQUIRED" read-only="false"
				rollback-for="com.snail.common.SPRollbackException" no-rollback-for="com.snail.common.SPNoRollbackException" />
			<tx:method name="add*" propagation="REQUIRED" read-only="false"
				rollback-for="com.snail.common.SPRollbackException" no-rollback-for="com.snail.common.SPNoRollbackException" />
			<tx:method name="save*" propagation="REQUIRED" read-only="false"
				rollback-for="com.snail.common.SPRollbackException" no-rollback-for="com.snail.common.SPNoRollbackException" />	
			<tx:method name="update*" propagation="REQUIRED" read-only="false"
				rollback-for="com.snail.common.SPRollbackException" no-rollback-for="com.snail.common.SPNoRollbackException" />
		</tx:attributes>
	</tx:advice>

	<aop:config>
		<aop:pointcut id="pc"
			expression="execution(public * com.snail.ssip.services..*.*(..))" /> <!--把事务控制在Service层 -->
		<aop:advisor pointcut-ref="pc" advice-ref="userTxAdvice" />
	</aop:config>

	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<!-- set the max upload size10MB -->
		<property name="maxUploadSize">
			<value>10485760</value>
		</property>
		<property name="maxInMemorySize">
			<value>4096</value>
		</property>
	</bean>

	<bean id="viewResolver" 
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/privatePages/" />
		<property name="suffix" value=".jsp" />
	</bean>

	<bean id="excelViewResolver" class="org.springframework.web.servlet.view.XmlViewResolver">
		<property name="order" value="1" />
		<property name="location" value="/WEB-INF/config/views.xml" />
	</bean>

</beans>      

